echoln "[defensive_values_4.cfg] Start of defensive_values_4.cfg";



echoln "[defensive_values_4.cfg] {1} Fetching defensive convars 226 through 300";
incrementvar "panorama_dragscroll_velocitymultiplier"                       "-18446744073709552000" "18446744073709552000" "0"; // 0.5 - Multiplier for flick velocity off of actual measured velocity
incrementvar "panorama_force_active_controller_type"                        "-18446744073709552000" "18446744073709552000" "0"; // -1
incrementvar "panorama_spew_layout_invalidates"                             "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "panorama_transition_time_factor"                              "-18446744073709552000" "18446744073709552000" "0"; // 1 - A float representing a scale factor for transitions. 1.0 is normal, 2.0 would be twice as fast as normal, 0.5 half as fast
incrementvar "panorama_max_text_shadow_strength"                            "-18446744073709552000" "18446744073709552000" "0"; // 10
incrementvar "panorama_allow_transitions"                                   "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "panorama_2d_translate_no_comp_layer"                          "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "panorama_might_scroll_no_comp_layer"                          "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "panorama_box_shadow_no_comp_layer"                            "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "panorama_simple_borders_no_comp_layer"                        "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "panorama_allow_texture_composition_layer_fast_path"           "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "panorama_transforms_no_comp_layer"                            "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "panorama_transform_parents_no_layer_for_perspective"          "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "panorama_hsbc_through_fast_path"                              "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "panorama_track_render_commands"                               "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "lua_assert_on_error"                                          "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "lua_shipping_assert_on_error"                                 "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "net_max_polymorphic_spew"                                     "-18446744073709552000" "18446744073709552000" "0"; // 5 - Max polymorphic variants to spew when spewing a flattened serializer.
incrementvar "net_use_delta_property_fastpath"                              "-18446744073709552000" "18446744073709552000" "0"; // 1
incrementvar "net_culloptimization"                                         "-18446744073709552000" "18446744073709552000" "0"; // true - Enable optimization of slow path that makes HLTV CPU consumption high in AnimGraph-using mods. Will switch to this on by default soon.
incrementvar "net_qospacketloss_percentage_threshold"                       "-18446744073709552000" "18446744073709552000" "0"; // 5 - Spew a warning if packet loss percentage is above this threshold
incrementvar "net_log_processing"                                           "-18446744073709552000" "18446744073709552000" "0"; // false - Log network processing
incrementvar "net_use_packet_compression"                                   "-18446744073709552000" "18446744073709552000" "0"; // true - Compress network traffic
incrementvar "net_showmsg"                                                  "-18446744073709552000" "18446744073709552000" "0"; // 0 - Show incoming message: <0|1|2|name> where 1 == all and 2 == all except net_NOP
incrementvar "net_showreliable"                                             "-18446744073709552000" "18446744073709552000" "0"; // 0 - Like net_showmsg, but only spew reliable messages
incrementvar "net_showpeaks"                                                "-18446744073709552000" "18446744073709552000" "0"; // 0 - Show messages for large packets only: <size>
incrementvar "net_showdrop"                                                 "-18446744073709552000" "18446744073709552000" "0"; // false - Show dropped packets in console
incrementvar "net_restrict_showmsg_socket"                                  "-18446744073709552000" "18446744073709552000" "0"; //  - If set, only net_showmsg spew for data inbound on this socket name e.g. client, server, etc.
incrementvar "net_max_message_process_count"                                "-18446744073709552000" "18446744073709552000" "0"; // 0 - Maximum number of messages to process from a client in a single frame (0 == no limit).
incrementvar "net_max_message_queue_size"                                   "-18446744073709552000" "18446744073709552000" "0"; // 0 - Maximum number of messages to allow waiting in queue after processing; exceeding this disconnects the client. 0 == no limit
incrementvar "net_detailed_canpacket_log"                                   "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "net_showoob"                                                  "-18446744073709552000" "18446744073709552000" "0"; // false - Show connectionless UDP traffic.
incrementvar "net_usesocketsforloopback"                                    "-18446744073709552000" "18446744073709552000" "0"; // false - Use network sockets layer even for listen server local player's packets (multiplayer only).
incrementvar "net_p2p_listen_dedicated"                                     "-18446744073709552000" "18446744073709552000" "0"; // false - Should dedicated server listen for new-style P2P?
incrementvar "animgraph_ik_debug"                                           "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "animgraph_force_full_network_updates"                         "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "animgraph_enable_dirty_netvar_optimization"                   "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "animgraph_verify_dirty_netvar_optimization"                   "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "animgraph_footlock_trace_ground_enabled"                      "-18446744073709552000" "18446744073709552000" "0"; // true - Convar for toggling foot lock ground tracking.
incrementvar "animgraph_footlock_calculate_tilt"                            "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "animgraph_footlock_auto_ledge_detection"                      "-18446744073709552000" "18446744073709552000" "0"; // true - Attempt to detect when the foot is partially hanging off a ledge and stop it tilting to reach the bottom
incrementvar "animgraph_footlock_auto_stair_detection"                      "-18446744073709552000" "18446744073709552000" "0"; // true - Attempt to detect when the foot is on a stair and will stop it from tilting to reach the next step
incrementvar "animgraph_footlock_debug_foot_index"                          "-18446744073709552000" "18446744073709552000" "0"; // -1
incrementvar "animgraph_footlock_debug_type"                                "-18446744073709552000" "18446744073709552000" "0"; // 2
incrementvar "animgraph_slowdownonslopes_enabled"                           "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "animgraph_footlock_enabled"                                   "-18446744073709552000" "18446744073709552000" "0"; // true - A master convar that effectively disables the entire footlock node.
incrementvar "animgraph_footlock_hip_offset_enable"                         "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "animgraph_footlock_tilt_mode"                                 "-18446744073709552000" "18446744073709552000" "0"; // 1
incrementvar "animgraph_footlock_use_hip_shift"                             "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "animgraph_footlock_draw_footbase"                             "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "animgraph_motionmatching_print_compressionstats"              "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "animgraph_footlock_ground_roll"                               "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "ik_debug_all_chains_unique_color_per_chain"                   "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "ik_debug_planetilt"                                           "-18446744073709552000" "18446744073709552000" "0"; // 0
incrementvar "ik_debug_planetilt_axis_length"                               "-18446744073709552000" "18446744073709552000" "0"; // 20
incrementvar "ik_planetilt_enable"                                          "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "ik_debug_constraints"                                         "-18446744073709552000" "18446744073709552000" "0"; // -1
incrementvar "ik_final_fixup_enable"                                        "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "ik_debug_targets"                                             "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "ik_constraints_enabled"                                       "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "ik_debug_ccd"                                                 "-18446744073709552000" "18446744073709552000" "0"; // 0
incrementvar "ik_debug_fabrik_backwards_enabled"                            "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "ik_debug_fabrik_forwards_enabled"                             "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "ik_debug_fabrik_backwards_iterations"                         "-18446744073709552000" "18446744073709552000" "0"; // 0
incrementvar "ik_debug_fabrik_forwards_iterations"                          "-18446744073709552000" "18446744073709552000" "0"; // 0
incrementvar "ik_fabrik_align_chain"                                        "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "ik_fabrik_override_num_iterations"                            "-18446744073709552000" "18446744073709552000" "0"; // -1
incrementvar "ik_fabrik_forwards_enabled"                                   "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "ik_fabrik_backwards_enabled"                                  "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "ik_debug_dogleg3bone"                                         "-18446744073709552000" "18446744073709552000" "0"; // 0
incrementvar "ik_debug_dogleg3bone_enabled"                                 "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "ik_debug_perlin_solver"                                       "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "phys_use_position_based_toi_test"                             "-18446744073709552000" "18446744073709552000" "0"; // true - Use a position based heuristic to cull slow objects from the TOI phase of the solver
incrementvar "phys_implicit_integarator"                                    "-18446744073709552000" "18446744073709552000" "0"; // true - Use implicit integrator for gyroscopic forces
incrementvar "phys_drag_multiplier"                                         "-18446744073709552000" "18446744073709552000" "0"; // 1 - Multiply air drag



echoln "[defensive_values_4.cfg] End of defensive_values_4.cfg";