echoln "[defensive_values_10.cfg] Start of defensive_values_10.cfg";



echoln "[defensive_values_10.cfg] {1} Fetching defensive convars 901 through 1000";
incrementvar "r_world_wind_smooth_time"                             "-18446744073709552000" "18446744073709552000" "0";
incrementvar "r_world_wind_strength"                                "-18446744073709552000" "18446744073709552000" "0";
incrementvar "ragdoll_debug_item_detachment"                        "-18446744073709552000" "18446744073709552000" "0";
incrementvar "ragdoll_impact_strength"                              "-18446744073709552000" "18446744073709552000" "0";
incrementvar "ragdoll_override_root_orientation"                    "-18446744073709552000" "18446744073709552000" "0";
incrementvar "ragdoll_prop_settle"                                  "-18446744073709552000" "18446744073709552000" "0"; // Enable more aggressive ragdoll settling
incrementvar "ragdoll_prop_sleepaftertime"                          "-18446744073709552000" "18446744073709552000" "0"; // After this many seconds of being basically stationary, the ragdoll will go to sleep.
incrementvar "ragdoll_prop_sleepdisabletime"                        "-18446744073709552000" "18446744073709552000" "0"; // Ragdoll is not allowed to physically sleep until this timer has elapsed.
incrementvar "ragdoll_relax_limts"                                  "-18446744073709552000" "18446744073709552000" "0";
incrementvar "ragdoll_scale_sleep_tolerance"                        "-18446744073709552000" "18446744073709552000" "0";
incrementvar "ragdoll_validate_targetpose"                          "-18446744073709552000" "18446744073709552000" "0";
incrementvar "ragdoll_visualize_creation_skeleton"                  "-18446744073709552000" "18446744073709552000" "0";
incrementvar "ragdoll_visualize_targetpose"                         "-18446744073709552000" "18446744073709552000" "0";
incrementvar "report_connection_failure_percentage"                 "-18446744073709552000" "18446744073709552000" "0";
incrementvar "rope_averagelight"                                    "-18446744073709552000" "18446744073709552000" "0"; // Makes ropes use average of cubemap lighting instead of max intensity.
incrementvar "rope_collide"                                         "-18446744073709552000" "18446744073709552000" "0"; // Collide rope with the world
incrementvar "rope_shake"                                           "-18446744073709552000" "18446744073709552000" "0";
incrementvar "rope_smooth_enlarge"                                  "-18446744073709552000" "18446744073709552000" "0"; // How much to enlarge ropes in screen space for antialiasing effect
incrementvar "rope_smooth_maxalpha"                                 "-18446744073709552000" "18446744073709552000" "0"; // Alpha for rope antialiasing effect
incrementvar "rope_smooth_maxalphawidth"                            "-18446744073709552000" "18446744073709552000" "0";
incrementvar "rope_smooth_minalpha"                                 "-18446744073709552000" "18446744073709552000" "0"; // Alpha for rope antialiasing effect
incrementvar "rope_smooth_minwidth"                                 "-18446744073709552000" "18446744073709552000" "0"; // When using smoothing, this is the min screenspace width it lets a rope shrink to
incrementvar "rope_subdiv"                                          "-18446744073709552000" "18446744073709552000" "0"; // Rope subdivision amount0
incrementvar "rope_wind_dist"                                       "-18446744073709552000" "18446744073709552000" "0"; // Don't use CPU applying small wind gusts to ropes when they're past this distance.
incrementvar "rr_dacmode"                                           "-18446744073709552000" "18446744073709552000" "0"; // If set to 1, enable special functionality for DAC
incrementvar "rr_debugclassname"                                    "-18446744073709552000" "18446744073709552000" "0"; // If set, rr_debugclassname will print only response tests where 'classname' corresponds to this variable. Use to filter for a specific character.
incrementvar "rr_debugresponseconcept"                              "-18446744073709552000" "18446744073709552000" "0"; // If set, rr_debugresponseconcept will print only responses testing for the specified concept
incrementvar "rr_debugresponses"                                    "-18446744073709552000" "18446744073709552000" "0"; // Show verbose matching output (1 for simple, 2 for rule scoring, 3 for noisy). If set to 4, it will only show response success/failure for npc_selected NPCs.
incrementvar "rr_debugrule"                                         "-18446744073709552000" "18446744073709552000" "0"; // If set to the name of the rule, that rule's score will be shown whenever a concept is passed into the response rules system.
incrementvar "rr_dumpresponses"                                     "-18446744073709552000" "18446744073709552000" "0"; // Dump all response_rules.txt and rules (requires restart)
incrementvar "rtx_force_default_hitgroup"                           "-18446744073709552000" "18446744073709552000" "0"; // Forces all ray traced geometry to use default hit shaders instead of specialized ones.
incrementvar "rubikon_joint_always_draw_at_pivot_point"             "-18446744073709552000" "18446744073709552000" "0";
incrementvar "rubikon_joint_deepdebugging"                          "-18446744073709552000" "18446744073709552000" "0";
incrementvar "save_async"                                           "-18446744073709552000" "18446744073709552000" "0";
incrementvar "save_fake_hitch"                                      "-18446744073709552000" "18446744073709552000" "0"; // Force a busy wait for the specified number of milliseconds during save to simulate a hitch
incrementvar "save_history_count"                                   "-18446744073709552000" "18446744073709552000" "0"; // Keep this many old copies in history of autosaves and quicksaves.
incrementvar "save_screenshot"                                      "-18446744073709552000" "18446744073709552000" "0"; // 0 = none, 1 = non-autosave, 2 = always, 3 = bug_only
incrementvar "save_spew"                                            "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_aggregate_gpu_culling"                             "-18446744073709552000" "18446744073709552000" "0"; // Toggles GPU culling of aggregate meshes
incrementvar "sc_aggregate_gpu_occlusion_culling"                   "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_allow_dithered_lod"                                "-18446744073709552000" "18446744073709552000" "0"; // Allow use of dithered lod transitions
incrementvar "sc_allow_dynamic_constant_batching"                   "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_allow_precomputed_vismembers"                      "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_allow_secondary_contexts"                          "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_batch_layer_cb_updates"                            "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_bounds_group_cull"                                 "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_cache_envmap_lpv_lookup"                           "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_clutter_density_full_size"                         "-18446744073709552000" "18446744073709552000" "0"; // Screen-size where clutter will be full density
incrementvar "sc_clutter_density_none_size"                         "-18446744073709552000" "18446744073709552000" "0"; // Screen-size where clutter will be gone
incrementvar "sc_disable_baked_lighting"                            "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_dithered_lod_transition_amt"                       "-18446744073709552000" "18446744073709552000" "0"; // Percentage of the transition between two lods we will apply a dither0
incrementvar "sc_enable_discard"                                    "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_force_push_constant_update_every_draw"             "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_force_single_display_list_per_layer"               "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_hdr_enabled_override"                              "-18446744073709552000" "18446744073709552000" "0"; // Override default setting for HDR rendering. -1 default, 0 NoHdr, 1 Hdr, 2 Hdr 1010102 3 Hdr 111110
incrementvar "sc_keep_all_layers"                                   "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_layer_batch_threshold"                             "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_layer_batch_threshold_fullsort"                    "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_max_framebuffer_copies_per_layer"                  "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_mesh_backface_culling"                             "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_new_morph_atlasing"                                "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_no_cull"                                           "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_no_vis"                                            "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_parallel_render_a_view"                            "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_queue_reflection_views_to_layers"                  "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_shadow_depth_bias"                                 "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_shadow_depth_bias_clamp"                           "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_shadow_depth_bias_state_override"                  "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_shadow_slopescale_depth_bias"                      "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_show_rejected_objects"                             "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_show_rejected_objects_range"                       "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_skip_identical_rt_binds"                           "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_spew_cmt_usage"                                    "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_throw_away_all_layers"                             "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_use_clear_subrect"                                 "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sc_visualize_batches"                                 "-18446744073709552000" "18446744073709552000" "0"; // color per batch
incrementvar "sc_visualize_sceneobjects"                            "-18446744073709552000" "18446744073709552000" "0"; // 1 = visualize bounds, 2 = visualize sceneobject mesh materials, 3 = required texture size, 4 = bounds group, 5 = LOD, 6 == LPV Binding
incrementvar "scene_clientflex"                                     "-18446744073709552000" "18446744073709552000" "0"; // Do client side flex animation.
incrementvar "scene_maxcaptionradius"                               "-18446744073709552000" "18446744073709552000" "0"; // Only show closed captions if recipient is within this many units of speaking actor (0==disabled).
incrementvar "scene_print"                                          "-18446744073709552000" "18446744073709552000" "0"; // When playing back a scene, print timing and event info to console.
incrementvar "scene_vcdautosave"                                    "-18446744073709552000" "18446744073709552000" "0"; // Create a savegame before VCD playback
incrementvar "screenshot_height"                                    "-18446744073709552000" "18446744073709552000" "0"; // Screenshot height. -1 for screen height.
incrementvar "screenshot_prefix"                                    "-18446744073709552000" "18446744073709552000" "0"; // Set the screenshot auto naming prefix.
incrementvar "screenshot_subdir"                                    "-18446744073709552000" "18446744073709552000" "0"; // Set the screenshot directory.
incrementvar "screenshot_width"                                     "-18446744073709552000" "18446744073709552000" "0"; // Screenshot width. -1 for screen width.
incrementvar "script_attach_debugger_at_startup"                    "-18446744073709552000" "18446744073709552000" "0";
incrementvar "script_break_in_native_debugger_on_error"             "-18446744073709552000" "18446744073709552000" "0";
incrementvar "shake_show"                                           "-18446744073709552000" "18446744073709552000" "0"; // Displays a list of the active screen shakes.
incrementvar "sk_player_arm"                                        "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sk_player_chest"                                      "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sk_player_head"                                       "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sk_player_leg"                                        "-18446744073709552000" "18446744073709552000" "0";
incrementvar "sk_player_stomach"                                    "-18446744073709552000" "18446744073709552000" "0";
incrementvar "skel_debug"                                           "-18446744073709552000" "18446744073709552000" "0";
incrementvar "slope_drop_debug"                                     "-18446744073709552000" "18446744073709552000" "0"; // Toggles a test dropping the view offset based on the slope
incrementvar "slope_drop_enable"                                    "-18446744073709552000" "18446744073709552000" "0"; // Toggles a test dropping the view offset based on the slope
incrementvar "slope_drop_max_offset"                                "-18446744073709552000" "18446744073709552000" "0"; // The maximum distance to adjust the view height
incrementvar "slope_drop_off_ground_blend_speed"                    "-18446744073709552000" "18446744073709552000" "0"; // The speed with which the slope drop is blended out when the entity leaves the ground
incrementvar "smoke_grenade_ct_color"                               "-18446744073709552000" "18446744073709552000" "0";



echoln "[defensive_values_10.cfg] End of defensive_values_10.cfg";
