echoln "[defensive_values_1.cfg] Start of defensive_values_1.cfg";



echoln "[defensive_values_1.cfg] {1} Fetching defensive convars 1 through 75";
incrementvar "testscript_debug"                                             "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false - Debug test scripts.
incrementvar "engine_show_frame_ticks"                                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "engine_show_frame_multiple_ticks"                             "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "engine_vr_max_ticks_to_simulate"                              "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 3 - Max number of ticks to simulate per frame, after which simulation will start to slow down compared to real time.
incrementvar "engine_render_only"                                           "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "engine_allow_multiple_ticks_per_frame"                        "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true - When the client is catching up in low frame rate situations, should we run tick more than once a frame?
incrementvar "engine_allow_multiple_simulates_per_frame"                    "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false - When the client is catching up in low frame rate situations, should we run client simulate more than once a frame?
incrementvar "engine_client_tick_pad_enable"                                "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "host_force_frametime_to_equal_tick_interval"                  "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "host_force_max_frametime_to_tick_interval"                    "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "engine_max_resource_system_update_time"                       "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 5
incrementvar "r_experimental_lag_limiter"                                   "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "vis_enable"                                                   "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true - Enable precomputed visibility when true
incrementvar "r_ssao"                                                       "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true - Set to use screen-space ambient occlusion
incrementvar "net_async_job_random_sleep"                                   "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0 - Sleep randomly 0..net_async_job_random_sleep ms in the parallel server jobs; sleep is per job
incrementvar "tv_extended_logging"                                          "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "tv_window_size"                                               "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 16 - Specifies the number of seconds worth of frames that the tv replay system should keep in memory. Increasing this greatly increases the amount of memory consumed by the TV system
incrementvar "tv_instant_replay_full_frame"                                 "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true - Send embedded full frames
incrementvar "tv_instant_replay_full_frame_time"                            "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 30 - Seconds between full frame embeddeds
incrementvar "tv_instant_replay_full_frame_build_threaded"                  "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false - Build the full frames on a seperate job thread
incrementvar "r_skip_precache_validation_check"                             "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "r_add_views_in_pre_output"                                    "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "mouse_disableinput"                                           "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false - Set to disable mouse input
incrementvar "convars_echo_toggle_changes"                                  "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true - Echo to the console changes caused by toggling.
incrementvar "r_vconsole_foregroundforcerender"                             "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true - When VConsole is in the foreground, force all engine & tools to render
incrementvar "r_always_render_all_windows"                                  "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false - Always force all engine & tools to render
incrementvar "jpeg_quality"                                                 "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 90 - Set jpeg screenshot quality. [1..100]
incrementvar "screenshot_subdir"                                            "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // screenshots - Set the screenshot directory.
incrementvar "screenshot_prefix"                                            "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // shot - Set the screenshot auto naming prefix.
incrementvar "screenshot_width"                                             "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // -1 - Screenshot width. -1 for screen width.
incrementvar "screenshot_height"                                            "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // -1 - Screenshot height. -1 for screen height.
incrementvar "cl_playback_screenshots"                                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false - Allows the client to playback screenshot and jpeg commands in demos.
incrementvar "voice_sequence_maximum_wait_time"                             "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0.5 - When receiving packets out of sequence, wait this many seconds for missing sequences to arrive
incrementvar "voice_threshold_delay"                                        "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0.5
incrementvar "soundsystem_update_async"                                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "stats_display"                                                "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0 - Displays perf statistics information
incrementvar "stats_collect_gpu"                                            "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false - While doing stats_display, collect GPU perf counters. Used for stats_print_gpu.
incrementvar "vprof_counters"                                               "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0
incrementvar "vprof_counters_show_minmax"                                   "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "engine_rendersystem_used"                                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; //  - Rendersystem option in use (changing this does not change the rendersystem).
incrementvar "engine_rendersystem_init"                                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; //  - Rendersystem option requested (changing this does not change the rendersystem).
incrementvar "engine_rendersystem_shader_model"                             "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0 - Rendersystem shader model in use (changing this does not change the shader model).
incrementvar "engine_platform_name_extended"                                "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; //  - Platform the engine is running on.
incrementvar "engine_ostype"                                                "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; //  - OS type the engine is running on.
incrementvar "engine_cpu_info_extended"                                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; //  - CPU the engine is running on.
incrementvar "cl_language"                                                  "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // english - Language
incrementvar "sys_minidumpexpandedspew"                                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "report_connection_failure_percentage"                         "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0
incrementvar "engine_no_focus_sleep_vconsole_suppress"                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true - When VConsole is in the foreground, don't trigger engine_no_focus_sleep behavior
incrementvar "engine_show_frame_pacing"                                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "mobile_fps_increase_during_hfr_animations"                    "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true - MOBILE_FPS_CONTROL: If true we increase framerate limit during HFR-tagged animations and transitions.
incrementvar "sv_fps_max"                                                   "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0 - Dedicated server frame rate limiter. 0=tick rate. Only applies to the dedicated server.
incrementvar "async_serialize"                                              "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false - Force async reads to serialize for profiling
incrementvar "con_logfile_suffix"                                           "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; //  - Suffix to append to the console log, may be changed to reopen the log
incrementvar "gameevents_showevents"                                        "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0 - Dump game events to console. (1 = Show Signaling, 2 = Show Posting also).
incrementvar "gameevents_showeventlisteners"                                "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false - Show listening addition/removals
incrementvar "sv_maxclientframes"                                           "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 128
incrementvar "sv_extra_client_connect_time"                                 "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 15 - Seconds after client connect during which extra frames are buffered to prevent non-delta'd update
incrementvar "sv_maxreplay"                                                 "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0 - Maximum replay time in seconds
incrementvar "ss_voice_hearpartner"                                         "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false - Route voice between splitscreen players on same system.
incrementvar "spec_replay_fullframe"                                        "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true - Send full frame on every hltv replay transition
incrementvar "net_async_clientconnect"                                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true - Enable async client connect optimization
incrementvar "sv_filterban"                                                 "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 1 - Set packet filtering by IP mode
incrementvar "sv_banid_dev_enabled"                                         "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "sv_usenetworkvars"                                            "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true - Use networkvar system.
incrementvar "sv_rcon_banpenalty"                                           "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0 - Number of minutes to ban users who fail rcon authentication
incrementvar "sv_rcon_maxfailures"                                          "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 10 - Max number of times a user can fail rcon authentication before being banned
incrementvar "sv_rcon_minfailures"                                          "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 5 - Number of times a user can fail rcon authentication in sv_rcon_minfailuretime before being banned
incrementvar "sv_rcon_minfailuretime"                                       "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 30 - Number of seconds to track failed rcon authentications
incrementvar "sv_rcon_log"                                                  "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true - Enable/disable rcon logging.
incrementvar "mem_test_quiet"                                               "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false - Don't print stats when memtesting
incrementvar "mem_test_each_frame"                                          "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false - Run heap check at end of every frame
incrementvar "mem_test_every_n_seconds"                                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0 - Run heap check at a specified interval
incrementvar "engine_sse42"                                                 "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true - turn on sse4.2 optimizations in the engine
incrementvar "sv_temp_baseline_string_table_buffer_size"                    "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 524288 - Buffer size for writing string table baselines



echoln "[defensive_values_1.cfg] End of defensive_values_1.cfg";
