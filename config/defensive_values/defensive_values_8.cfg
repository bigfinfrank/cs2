echoln "[defensive_values_8.cfg] Start of defensive_values_8.cfg";



echoln "[defensive_values_8.cfg] {1} Fetching defensive convars 526 through 600";
incrementvar "r_draw_overlays"                                              "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "sc_use_clear_subrect"                                         "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "sc_enable_discard"                                            "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "r_grass_vertex_lighting"                                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0
incrementvar "r_grass_alpha_test"                                           "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 1
incrementvar "r_grass_start_fade"                                           "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 3000
incrementvar "r_grass_end_fade"                                             "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 3900
incrementvar "r_grass_density_mode"                                         "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 1 - 0 = Density corresponds to blade existance, 1 = Density corresponds to blade height, 2 = Both 0 and 1
incrementvar "r_grass_quality"                                              "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 3 - 0 = Off, 1 = Low, 2 = Med, 3 = high, 4 = ultra
incrementvar "r_grass_max_brightness_change"                                "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 75
incrementvar "r_grass_allow_flattening"                                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "r_grass_parallel_load"                                        "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "r_lightmap_size"                                              "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 65536 - Maximum lightmap resolution.
incrementvar "r_lightmap_size_directional_irradiance"                       "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // -1 - Maximum lightmap resolution for directional_irradiance channel. -1 = use value of r_lightmap_size
incrementvar "r_world_allow_bindless_desc"                                  "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "sc_allow_precomputed_vismembers"                              "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "r_world_wind_strength"                                        "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 40
incrementvar "r_world_wind_offset_speed"                                    "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0.25,0.30000001192092896,0.20000000298023224
incrementvar "r_world_wind_frequency_grass"                                 "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0.03
incrementvar "r_world_wind_frequency_trees"                                 "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0.003
incrementvar "r_world_wind_dir"                                             "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0.7070000171661377,0.7070000171661377,0
incrementvar "r_world_wind_smooth_time"                                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 2
incrementvar "r_world_frame_load_threshold_ms"                              "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 10
incrementvar "r_particle_max_detail_level"                                  "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 3 - The maximum detail level of particle to create
incrementvar "particle_debug_creation_filter"                               "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; //
incrementvar "r_particle_debug_filter"                                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; //  - Limit debug visualizations to substring match of effect name
incrementvar "r_particle_debug_randomseeds"                                 "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false - Use random seeds in debug
incrementvar "r_particle_render_test"                                       "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false - render particles 100 times and show perf
incrementvar "r_particle_min_timestep"                                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0 - A minimum on particle simulation time, particle simulation happening more frequently than this will lerp.
incrementvar "cl_particle_batch_mode"                                       "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 1
incrementvar "cl_particle_fallback_multiplier"                              "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0 - Multiplier for falling back to cheaper effects under load.
incrementvar "cl_particle_fallback_base"                                    "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0 - Base for falling back to cheaper effects under load.
incrementvar "cl_particle_max_count"                                        "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0
incrementvar "cl_aggregate_particles"                                       "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "r_threaded_particles"                                         "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "r_particle_timescale"                                         "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 1
incrementvar "r_particle_debug_force_simulation"                            "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0 - -1 for all asleep, 1 for all awake
incrementvar "cl_particle_log_creates"                                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false - Print debug message every time a particle collection is created
incrementvar "cl_particle_sim_fallback_threshold_ms"                        "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 6 - Amount of simulation time that can elapse before new systems start falling back to cheaper versions
incrementvar "cl_particle_sim_fallback_base_multiplier"                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 5 - How aggressive the switch to fallbacks will be depending on how far over the cl_particle_sim_fallback_threshold_ms the sim time is.  Higher numbers are more aggressive.
incrementvar "r_particle_cables_cast_shadows"                               "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "particle_powsimd_random_range_exp"                            "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "r_particle_max_texture_layers"                                "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // -1
incrementvar "r_particle_gpu_implicit"                                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "r_particle_force_material_binds"                              "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "panorama_debug_movies"                                        "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "panorama_movie_async_load_size_bytes"                         "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 20971520
incrementvar "panorama_movie_force_not_ready_behavior"                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // -1
incrementvar "panorama_console_max_history"                                 "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 100
incrementvar "panorama_console_max_autocomplete"                            "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 100
incrementvar "panorama_console_max_lines"                                   "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 2000
incrementvar "panorama_dragscroll_minflickvelocity"                         "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 60 - Minimum velocity that the mouse must be moving as mouse up time to qualify as a drag scroll flick
incrementvar "panorama_dragscroll_maxflickvelocity"                         "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 8000 - Maximum velocity for a drag scroll flick
incrementvar "panorama_daisy_wheel"                                         "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // ABXY - Daisy wheel input mode: RS | ABXY
incrementvar "npcsolve_constraint_nav"                                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "npcsolve_separation"                                          "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "npcsolve_separation_const"                                    "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 10000
incrementvar "npcsolve_separation_dist"                                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 5
incrementvar "npcsolve_separation_r2"                                       "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "npcsolve_separation_jitter"                                   "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0
incrementvar "npcsolve_separation_draw"                                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "npcsolve_forward"                                             "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "npcsolve_forward_const"                                       "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 30000
incrementvar "npcsolve_forward_dist"                                        "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 200
incrementvar "npcsolve_forward_margin"                                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 5
incrementvar "navnetsolve_draw_tri"                                         "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // -1
incrementvar "fire_extinguishes_under_water"                                "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "cojob_max_no_yield_time_us"                                   "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 3000 - Will spew if a job takes longer than the specified number of microseconds
incrementvar "cojob_lock_hold_warning_threshold_ms"                         "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 10000 - How long in milliseconds before we warn about lock hold duration
incrementvar "nav_test_pos_name"                                            "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; //
incrementvar "nav_test_pos_place"                                           "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // -1
incrementvar "population_distribution_debug"                                "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0
incrementvar "nav_search_lattice_progressive_scale"                         "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 1.7
incrementvar "nav_search_lattice_initial_scale"                             "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 3
incrementvar "npcsolve_path_lookahead_const"                                "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 4



echoln "[defensive_values_8.cfg] End of defensive_values_8.cfg";
