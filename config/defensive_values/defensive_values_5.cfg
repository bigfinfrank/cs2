echoln "[defensive_values_5.cfg] Start of defensive_values_5.cfg";



echoln "[defensive_values_5.cfg] {1} Fetching defensive convars 301 through 375";
incrementvar "phys_buoyancy_horizontal_damping_multiplier"                  "-18446744073709552000" "18446744073709552000" "0"; // 0 - Multiply water damping for buoyancy affecting linear velocity in the horizontal plane
incrementvar "phys_buoyancy_vertical_damping_multiplier"                    "-18446744073709552000" "18446744073709552000" "0"; // 1 - Multiply water damping for buoyancy affecting linear velocity in the vertical direction
incrementvar "phys_buoyancy_angular_damping_multiplier"                     "-18446744073709552000" "18446744073709552000" "0"; // 1 - Multiply water damping for buoyancy affecting angular velocity
incrementvar "phys_buoyancy_drag_multiplier"                                "-18446744073709552000" "18446744073709552000" "0"; // 1 - Multiply water drag (tries to equalize object velocity with the velocity of the water flow)
incrementvar "phys_fastaddcloneshape"                                       "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "rubikon_joint_deepdebugging"                                  "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "rubikon_joint_always_draw_at_pivot_point"                     "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "phys_build_mass"                                              "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "phys_build_bounds"                                            "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "physics_hull_sphere_cast_sat_experimental"                    "-18446744073709552000" "18446744073709552000" "0"; // 1
incrementvar "cloth_step"                                                   "-18446744073709552000" "18446744073709552000" "0"; // 1
incrementvar "cloth_sleep_threshold"                                        "-18446744073709552000" "18446744073709552000" "0"; // 30
incrementvar "cloth_resim_after"                                            "-18446744073709552000" "18446744073709552000" "0"; // 0.5
incrementvar "cloth_max_ticks_per_frame"                                    "-18446744073709552000" "18446744073709552000" "0"; // 8
incrementvar "cloth_step_variability"                                       "-18446744073709552000" "18446744073709552000" "0"; // 0.05
incrementvar "cloth_interpolation_strategy"                                 "-18446744073709552000" "18446744073709552000" "0"; // 0
incrementvar "cloth_rigid_update"                                           "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "cloth_quasistatic_iters"                                      "-18446744073709552000" "18446744073709552000" "0"; // 0
incrementvar "cloth_guard_threshold"                                        "-18446744073709552000" "18446744073709552000" "0"; // 1000
incrementvar "cloth_watch"                                                  "-18446744073709552000" "18446744073709552000" "0"; // 1
incrementvar "cloth_debug"                                                  "-18446744073709552000" "18446744073709552000" "0"; // 0
incrementvar "cloth_damping_multiplier"                                     "-18446744073709552000" "18446744073709552000" "0"; // 1
incrementvar "cloth_damping_bias"                                           "-18446744073709552000" "18446744073709552000" "0"; // 0
incrementvar "cloth_ground_plane_thickness"                                 "-18446744073709552000" "18446744073709552000" "0"; // 3
incrementvar "cloth_node_debug_axis_length"                                 "-18446744073709552000" "18446744073709552000" "0"; // 1
incrementvar "cloth_quad_smooth_rate"                                       "-18446744073709552000" "18446744073709552000" "0"; // -1
incrementvar "cloth_rod_smooth_rate"                                        "-18446744073709552000" "18446744073709552000" "0"; // -1
incrementvar "cloth_quad_smooth_iterations"                                 "-18446744073709552000" "18446744073709552000" "0"; // -1
incrementvar "cloth_rod_smooth_iterations"                                  "-18446744073709552000" "18446744073709552000" "0"; // -1
incrementvar "cloth_debug_draw_nodepth_alpha"                               "-18446744073709552000" "18446744073709552000" "0"; // 16
incrementvar "cloth_ground_offset"                                          "-18446744073709552000" "18446744073709552000" "0"; // 0
incrementvar "cloth_legacy_stretch_force"                                   "-18446744073709552000" "18446744073709552000" "0"; // 0.95
incrementvar "cloth_legacy_support"                                         "-18446744073709552000" "18446744073709552000" "0"; // 1
incrementvar "cloth_wind"                                                   "-18446744073709552000" "18446744073709552000" "0"; // 0
incrementvar "cloth_wind_pitch"                                             "-18446744073709552000" "18446744073709552000" "0"; // 0
incrementvar "cloth_dry_drag"                                               "-18446744073709552000" "18446744073709552000" "0"; // 0
incrementvar "cloth_dry_drag_soften"                                        "-18446744073709552000" "18446744073709552000" "0"; // 1
incrementvar "cloth_approximate_collide"                                    "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "phys_validate"                                                "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "phys2_debug_broadphase"                                       "-18446744073709552000" "18446744073709552000" "0"; // 0
incrementvar "phys_solve_in_parallel_with_island_build"                     "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "phys_skip_creating_trivial_islands"                           "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "cloth_simulate"                                               "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "cloth_batch"                                                  "-18446744073709552000" "18446744073709552000" "0"; // 32
incrementvar "phys_query_last_features_enabled"                             "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "phys_query_last_features_vertex_separation"                   "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "cl_jiggle_bone_sanity"                                        "-18446744073709552000" "18446744073709552000" "0"; // true - Prevent jiggle bones from pointing directly away from their target in case of numerical instability.
incrementvar "phys_jiggle_bone_enable"                                      "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "phys_old_contact_draw"                                        "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "phys2_contact_debug_draw_size"                                "-18446744073709552000" "18446744073709552000" "0"; // 2
incrementvar "phys_cull_internal_mesh_contacts"                             "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "phys_mesh_notify_ignore_sdf"                                  "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "phys_mesh_notify_force_generic"                               "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "phys_mesh_cluster_cull_compensation"                          "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "phys_mesh_find_matching_contacts_distance"                    "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "phys_enable_gjk_clipping"                                     "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "phys_fast_report_contacts"                                    "-18446744073709552000" "18446744073709552000" "0"; // 1 - when 1, fast path for collision reporting is implemented making triggers faster in some cases
incrementvar "phys_find_incident_face_wedges_fix"                           "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "hullivr_edge_merge_tan"                                       "-18446744073709552000" "18446744073709552000" "0"; // 0.02 - Should we try to straighten two faces connected to this edge? (tangent)
incrementvar "hullivr_faceisland_merge_tan"                                 "-18446744073709552000" "18446744073709552000" "0"; // 0.04 - Should we try to straighten an island of faces deviating from their average normal (tangent)?
incrementvar "hullivr_faceisland_merge_disp"                                "-18446744073709552000" "18446744073709552000" "0"; // 0 - Should we straighten face island if the displacement is this much? (inches)
incrementvar "hullivr_version"                                              "-18446744073709552000" "18446744073709552000" "0"; // 3
incrementvar "vphysics_force_apply_magnitude"                               "-18446744073709552000" "18446744073709552000" "0"; // 1
incrementvar "vphysics_return_implicit_velocity"                            "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "phys_position_iterations"                                     "-18446744073709552000" "18446744073709552000" "0"; // 2
incrementvar "phys_velocity_iterations"                                     "-18446744073709552000" "18446744073709552000" "0"; // 8
incrementvar "phys_dump_filter_solid_only"                                  "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "phys_dump_filter_trace_callstack"                             "-18446744073709552000" "18446744073709552000" "0"; // 
incrementvar "phys_dump_filter_body_name"                                   "-18446744073709552000" "18446744073709552000" "0"; // 
incrementvar "phys_reload_immediately"                                      "-18446744073709552000" "18446744073709552000" "0"; // false - Set to 1 to reload resources and reconstruct physics of entities on the fly. May unexpectedly change behavior or crash the game, because game code is generally unaware of underlying resource reloads and may hold references to physics that may become invalid during resource reload. It is inherently harder for physics to deal with resource reloads because of persistent nature of objects being simulated (textures can be easily reloaded on the fly; if an entity holds a handle to a ragdoll body part, it may expect that handle to stay valid while the ragdoll exists)
incrementvar "cloth_reload_immediately"                                     "-18446744073709552000" "18446744073709552000" "0"; // false
incrementvar "cl_snd_cast_clear"                                            "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "cl_snd_cast_retrigger"                                        "-18446744073709552000" "18446744073709552000" "0"; // true
incrementvar "snd_steamaudio_source_pathing_debug_duration"                 "-18446744073709552000" "18446744073709552000" "0"; // 0.01 - Duration for which path remains visible. Should be close to update rate of the sound operator stack.
incrementvar "snd_steamaudio_source_pathing_enable_validation"              "-18446744073709552000" "18446744073709552000" "0"; // false - Enable real-time pathing validation against dynamic geometry.



echoln "[defensive_values_5.cfg] End of defensive_values_5.cfg";