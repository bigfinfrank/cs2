echoln "[boot.cfg] Start of boot.cfg";



echoln "[boot.cfg] {1} Executing practice config for convenient defaults";
exec "./practice.cfg";


echoln "[boot.cfg] {2} Gathering debug information with various defensive commands";
cl_cs_dump_econ_item_stringtable;                               // cl_cs_dump_econ_item_stringtable
cl_dump_projected_texture_count;                                // Print out number of active projected textures
cl_dumpsplithacks;                                              // Dump split screen workarounds.
cl_entityreport;                                                // Reports all extant entities. Optional 2nd arg is a substring of a classname that the list will be filtered by.
cl_game_mode_convars;                                           // Display the values of the convars for the current game_mode.
cl_particles_dump_effects;
cl_particles_dumplist;                                          // Dump all new particles, optional name substring.
cl_particles_dumpsimlist;                                       // Dump all simulating particles, optional name substring.
cl_precacheinfo;                                                // Show precache info (client).
cl_report_predcopy_overrides;                                   // Report prediction copy overrides
cl_report_soundpatch;                                           // reports client-side sound patch count
cl_soundscape_printdebuginfo;                                   // print soundscapes
cpuinfo;                                                        // Print CPU configuration information
dbghist_dump;                                                   // Dump the debug history to the console. Format: <category id> Categories: 0: Entity I/O 1: AI Decisions 2: Scene Print 3: Alyx Blind 4: Log of damage done to player 5: Player Teleport 6: Blind Zombie Sounds 7: Player Continuous
dump_globals;                                                   // Dump all global entities/states
dump_loc_token;                                                 // List information on the given token
dump_localization_files;                                        // List all loaded localization files
dump_panorama_css_properties_memstats;                          // Prints out mem stats of all valid panorama CSS properties
dump_panorama_render_command_stats;
dump_secondary_scene_worlds;                                    // Lists secondary scene worlds and ref counts
dumpstringtable;                                                // Usage: dumpstringtable <tablename |all> <sv | cl> <verbose | simple> <element> Print string tables to console, verbose to dump data, simple to show name and count only, can specifiy a single numeric element index to restrict spew.
ent_list_report;                                                // Reports all list of all entities in a map, one by one
entity_lump_spew;                                               // Dump the contents of an entity lump
entityreport;                                                   // Reports all extant entities. Optional 2nd arg is a substring of a classname that the list will be filtered by.
fs_dump_open_duplicate_times;                                   // Set fs_report_long_reads 1 before loading to use this. Prints a list of files that were opened more than once and ~how long was spent reading from them.
ime_hkl_info;                                                   // Spew IME HKL info.
ime_info;                                                       // Spew IME info.
ime_supported_info;                                             // Spew IME Supported info.
loop_dump;                                                      // Print the listeners of the current loop mode
lua_report_memory;
mat_print_material_info;                                        // Print info about a specific material
mat_print_shader_info;                                          // Print detailed info about a single shader. Takes a shader name (hero.vfx) as an argument.
mem_dump;                                                       // Dump memory stats to text file or <stdout>.
model_dump_convert_info;                                        // Print model load-time conversion info
mp_dump_timers;                                                 // Prints round timers to the console for debugging
net_serializedentitymetadatainfo;                               // Spew CSerializedEntity metadata information
net_spewcounts;                                                 // Spew serializer counts, client only by default, specify server to spew server counts
panorama_dump_symbols;                                          // <ESymbolType> Dump all of the symbols in the Panorama symbol table
panorama_print_cache_status;                                    // Print internal panorama refcounts for every file
r_dx11_report_live_objects;                                     // Prints out live D3D11 objects (requires -dx11debug)
report_soundpatch;                                              // reports sound patch count
servervoice_dump;                                               // servervoice_dump
soundsysteminfo;                                                // Describe the current sound device without an active voice list.
spew_fonts;                                                     // Spew information about font manager fonts
sv_cs_dump_econ_item_stringtable;                               // sv_cs_dump_econ_item_stringtable
sv_game_mode_convars;                                           // Display the values of the convars for the current game_mode.
vis_debug_dumpvisibleclusters;                                  // Show the list of visible clusters
vmem_dump;                                                      // Dump memory stats to log.
vprof_dump_counters;                                            // Dump vprof counters to the console
vprof_generate_report_budget;                                   // Generate a report to the console based on budget group.
vprof_generate_report_hierarchy;                                // Generate a report to the console.
vprof_generate_report;                                          // Generate a report to the console.
world_dump_loaded_worlds;                                       // Dump all of the worlds that we know about


echoln "[boot.cfg] {3} Gathering debug information with various cheat commands";
cl_ent_actornames;                                              // Displays the entity name for all entities that have ShouldDisplayInActorNames true in code
cl_ent_name;                                                    // Displays the entity name
cl_ent_script_dump;                                             // Dumps the names and values of this entity's script scope to the console Arguments: {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}
cl_ent_text_sticky_dump;                                        // Spews the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text) Arguments: {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}
cl_imgui_set_status_text;                                       // Sets ImGui header status text
cl_script_dump_all;                                             // Dump the state of the VM to the console
cl_showents;                                                    // Dump entity list to console.
cl_spewserializers;                                             // Spew serializers
condump;                                                        // dump the text currently in the console to condumpXX.log
dumpparticlelist;                                               // Print out information on existing particle systems
ent_actornames;                                                 // Displays the entity name for all entities that have ShouldDisplayInActorNames true in code
ent_name;                                                       // Displays the entity name
ent_script_dump;                                                // Dumps the names and values of this entity's script scope to the console Arguments: {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at} gamedll cheat
ent_show_response_criteria;                                     // Print, to the console, an entity's current criteria set used to select responses. Arguments: {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}
ent_text_sticky_dump;                                           // Spews the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text) Arguments: {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at} gamedll cheat
gameinstructor_dump_open_lessons;                               // Gives a list of all currently open lessons.
gameinstructor_dump_run_lesson_counts;                          // Gives a list of lessons that been completed or shown
imgui_set_status_text;                                          // Sets ImGui header status text
markup_group_spew;                                              // Spew all current markup groups and their members
sc_dumpworld;                                                   // Dump a list of the objects in a sceneworld (Usage: sc_dumpworld <world_index>)
sc_dumpworld3d;                                                 // Dump the objects in a sceneworld into a 3d geoview buffer (Usage: sc_dumpworld3d <world_index>)
script_dump_all;                                                // Dump the state of the VM to the console
snd_list_deferred_soundevents;                                  // List all current deferred load soundevents
snd_list_soundevents_by_stack;                                  // List all available soundevents using specified stack name
snd_sos_print_field_name_strings;                               // Prints a list of currently cached field name strings
snd_sos_print_stack_exec_list;                                  // Prints the current stack execution list
soundscape_dumpclient;                                          // Dumps the client's soundscape data.
spawn_group_list;                                               // List all spawn groups
sv_soundscape_printdebuginfo
test_list_entities;                                             // test-list entities


echoln "[boot.cfg] {4} Executing debug.cfg";
exec "./config/primary/debug.cfg";



echoln "[boot.cfg] Start of boot.cfg";
